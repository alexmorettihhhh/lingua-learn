{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import*as authService from'../services/auth.service';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({isAuthenticated:false,user:null,loading:true,error:null,login:async()=>{},register:async()=>{},logout:()=>{},clearError:()=>{}});export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{loadUser();},[]);const loadUser=async()=>{try{const token=localStorage.getItem('token');if(!token){setLoading(false);return;}const response=await authService.getCurrentUser();if(response.success){setIsAuthenticated(true);setUser(response.user);}else{localStorage.removeItem('token');setIsAuthenticated(false);setUser(null);}}catch(error){localStorage.removeItem('token');setIsAuthenticated(false);setUser(null);}finally{setLoading(false);}};const login=async(email,password)=>{setLoading(true);setError(null);try{const response=await authService.login({email,password});if(response.success){localStorage.setItem('token',response.token);setIsAuthenticated(true);setUser(response.user);}else{setError(response.message||'Ошибка входа');setIsAuthenticated(false);setUser(null);}}catch(error){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Ошибка сервера. Пожалуйста, попробуйте позже.');setIsAuthenticated(false);setUser(null);}finally{setLoading(false);}};const register=async(name,email,password)=>{setLoading(true);setError(null);try{const response=await authService.register({name,email,password});if(response.success){localStorage.setItem('token',response.token);setIsAuthenticated(true);setUser(response.user);}else{setError(response.message||'Ошибка регистрации');setIsAuthenticated(false);setUser(null);}}catch(error){var _error$response2,_error$response2$data;setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Ошибка сервера. Пожалуйста, попробуйте позже.');setIsAuthenticated(false);setUser(null);}finally{setLoading(false);}};const logout=()=>{authService.logout();setIsAuthenticated(false);setUser(null);setError(null);};const clearError=()=>{setError(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,user,loading,error,login,register,logout,clearError},children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsx","_jsx","AuthContext","isAuthenticated","user","loading","error","login","register","logout","clearError","useAuth","AuthProvider","_ref","children","setIsAuthenticated","setUser","setLoading","setError","loadUser","token","localStorage","getItem","response","getCurrentUser","success","removeItem","email","password","setItem","message","_error$response","_error$response$data","data","name","_error$response2","_error$response2$data","Provider","value"],"sources":["E:/grok/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { IUser } from '../types';\r\nimport * as authService from '../services/auth.service';\r\n\r\ninterface AuthContextProps {\r\n  isAuthenticated: boolean;\r\n  user: IUser | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (name: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({\r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: true,\r\n  error: null,\r\n  login: async () => {},\r\n  register: async () => {},\r\n  logout: () => {},\r\n  clearError: () => {},\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState<IUser | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const loadUser = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await authService.getCurrentUser();\r\n      \r\n      if (response.success) {\r\n        setIsAuthenticated(true);\r\n        setUser(response.user);\r\n      } else {\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.login({ email, password });\r\n      \r\n      if (response.success) {\r\n        localStorage.setItem('token', response.token);\r\n        setIsAuthenticated(true);\r\n        setUser(response.user);\r\n      } else {\r\n        setError(response.message || 'Ошибка входа');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      }\r\n    } catch (error: any) {\r\n      setError(\r\n        error.response?.data?.message || \r\n        'Ошибка сервера. Пожалуйста, попробуйте позже.'\r\n      );\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (name: string, email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.register({ name, email, password });\r\n      \r\n      if (response.success) {\r\n        localStorage.setItem('token', response.token);\r\n        setIsAuthenticated(true);\r\n        setUser(response.user);\r\n      } else {\r\n        setError(response.message || 'Ошибка регистрации');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      }\r\n    } catch (error: any) {\r\n      setError(\r\n        error.response?.data?.message || \r\n        'Ошибка сервера. Пожалуйста, попробуйте позже.'\r\n      );\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n    setError(null);\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        clearError,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE7E,MAAO,GAAK,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAaxD,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAmB,CAClDQ,eAAe,CAAE,KAAK,CACtBC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,KAAAA,CAAA,GAAY,CAAC,CAAC,CACrBC,QAAQ,CAAE,KAAAA,CAAA,GAAY,CAAC,CAAC,CACxBC,MAAM,CAAEA,CAAA,GAAM,CAAC,CAAC,CAChBC,UAAU,CAAEA,CAAA,GAAM,CAAC,CACrB,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAMf,UAAU,CAACM,WAAW,CAAC,CAEpD,MAAO,MAAM,CAAAU,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACV,eAAe,CAAEY,kBAAkB,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACO,IAAI,CAAEY,OAAO,CAAC,CAAGnB,QAAQ,CAAe,IAAI,CAAC,CACpD,KAAM,CAACQ,OAAO,CAAEY,UAAU,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACS,KAAK,CAAEY,QAAQ,CAAC,CAAGrB,QAAQ,CAAgB,IAAI,CAAC,CAEvDC,SAAS,CAAC,IAAM,CACdqB,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CAACF,KAAK,CAAE,CACVH,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAxB,WAAW,CAACyB,cAAc,CAAC,CAAC,CAEnD,GAAID,QAAQ,CAACE,OAAO,CAAE,CACpBV,kBAAkB,CAAC,IAAI,CAAC,CACxBC,OAAO,CAACO,QAAQ,CAACnB,IAAI,CAAC,CACxB,CAAC,IAAM,CACLiB,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC,CAChCX,kBAAkB,CAAC,KAAK,CAAC,CACzBC,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CAAE,MAAOV,KAAK,CAAE,CACde,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC,CAChCX,kBAAkB,CAAC,KAAK,CAAC,CACzBC,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,OAAS,CACRC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAV,KAAK,CAAG,KAAAA,CAAOoB,KAAa,CAAEC,QAAgB,GAAK,CACvDX,UAAU,CAAC,IAAI,CAAC,CAChBC,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACF,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAxB,WAAW,CAACQ,KAAK,CAAC,CAAEoB,KAAK,CAAEC,QAAS,CAAC,CAAC,CAE7D,GAAIL,QAAQ,CAACE,OAAO,CAAE,CACpBJ,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAEN,QAAQ,CAACH,KAAK,CAAC,CAC7CL,kBAAkB,CAAC,IAAI,CAAC,CACxBC,OAAO,CAACO,QAAQ,CAACnB,IAAI,CAAC,CACxB,CAAC,IAAM,CACLc,QAAQ,CAACK,QAAQ,CAACO,OAAO,EAAI,cAAc,CAAC,CAC5Cf,kBAAkB,CAAC,KAAK,CAAC,CACzBC,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CAAE,MAAOV,KAAU,CAAE,KAAAyB,eAAA,CAAAC,oBAAA,CACnBd,QAAQ,CACN,EAAAa,eAAA,CAAAzB,KAAK,CAACiB,QAAQ,UAAAQ,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBE,IAAI,UAAAD,oBAAA,iBAApBA,oBAAA,CAAsBF,OAAO,GAC7B,+CACF,CAAC,CACDf,kBAAkB,CAAC,KAAK,CAAC,CACzBC,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,OAAS,CACRC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAT,QAAQ,CAAG,KAAAA,CAAO0B,IAAY,CAAEP,KAAa,CAAEC,QAAgB,GAAK,CACxEX,UAAU,CAAC,IAAI,CAAC,CAChBC,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACF,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAxB,WAAW,CAACS,QAAQ,CAAC,CAAE0B,IAAI,CAAEP,KAAK,CAAEC,QAAS,CAAC,CAAC,CAEtE,GAAIL,QAAQ,CAACE,OAAO,CAAE,CACpBJ,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAEN,QAAQ,CAACH,KAAK,CAAC,CAC7CL,kBAAkB,CAAC,IAAI,CAAC,CACxBC,OAAO,CAACO,QAAQ,CAACnB,IAAI,CAAC,CACxB,CAAC,IAAM,CACLc,QAAQ,CAACK,QAAQ,CAACO,OAAO,EAAI,oBAAoB,CAAC,CAClDf,kBAAkB,CAAC,KAAK,CAAC,CACzBC,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CAAE,MAAOV,KAAU,CAAE,KAAA6B,gBAAA,CAAAC,qBAAA,CACnBlB,QAAQ,CACN,EAAAiB,gBAAA,CAAA7B,KAAK,CAACiB,QAAQ,UAAAY,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBF,IAAI,UAAAG,qBAAA,iBAApBA,qBAAA,CAAsBN,OAAO,GAC7B,+CACF,CAAC,CACDf,kBAAkB,CAAC,KAAK,CAAC,CACzBC,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,OAAS,CACRC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAR,MAAM,CAAGA,CAAA,GAAM,CACnBV,WAAW,CAACU,MAAM,CAAC,CAAC,CACpBM,kBAAkB,CAAC,KAAK,CAAC,CACzBC,OAAO,CAAC,IAAI,CAAC,CACbE,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAED,KAAM,CAAAR,UAAU,CAAGA,CAAA,GAAM,CACvBQ,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAED,mBACEjB,IAAA,CAACC,WAAW,CAACmC,QAAQ,EACnBC,KAAK,CAAE,CACLnC,eAAe,CACfC,IAAI,CACJC,OAAO,CACPC,KAAK,CACLC,KAAK,CACLC,QAAQ,CACRC,MAAM,CACNC,UACF,CAAE,CAAAI,QAAA,CAEDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,cAAe,CAAAZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}