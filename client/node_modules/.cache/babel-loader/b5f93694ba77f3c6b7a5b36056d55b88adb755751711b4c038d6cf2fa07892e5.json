{"ast":null,"code":"import api from './api';\n// Получение прогресса пользователя\nexport const getUserProgress = async () => {\n  const response = await api.get('/users/me/progress');\n  return response.data;\n};\n\n// Обновление языков пользователя\nexport const updateUserLanguage = async (language, level) => {\n  const response = await api.put('/users/me/languages', {\n    language,\n    level\n  });\n  return response.data;\n};\n\n// Получение всех пользователей (только для админов)\nexport const getUsers = async () => {\n  const response = await api.get('/users');\n  return response.data;\n};\n\n// Получение пользователя по ID (только для админов)\nexport const getUser = async id => {\n  const response = await api.get(`/users/${id}`);\n  return response.data;\n};\n\n// Обновление пользователя (только для админов)\nexport const updateUser = async (id, userData) => {\n  const response = await api.put(`/users/${id}`, userData);\n  return response.data;\n};\n\n// Удаление пользователя (только для админов)\nexport const deleteUser = async id => {\n  const response = await api.delete(`/users/${id}`);\n  return response.data;\n};","map":{"version":3,"names":["api","getUserProgress","response","get","data","updateUserLanguage","language","level","put","getUsers","getUser","id","updateUser","userData","deleteUser","delete"],"sources":["E:/grok/client/src/services/user.service.ts"],"sourcesContent":["import api from './api';\r\nimport { IUser, IUserProgress, IApiResponse } from '../types';\r\n\r\n// Получение прогресса пользователя\r\nexport const getUserProgress = async (): Promise<IApiResponse<IUserProgress[]>> => {\r\n  const response = await api.get<IApiResponse<IUserProgress[]>>('/users/me/progress');\r\n  return response.data;\r\n};\r\n\r\n// Обновление языков пользователя\r\nexport const updateUserLanguage = async (\r\n  language: string,\r\n  level: 'beginner' | 'intermediate' | 'advanced'\r\n): Promise<IApiResponse<IUser>> => {\r\n  const response = await api.put<IApiResponse<IUser>>('/users/me/languages', {\r\n    language,\r\n    level,\r\n  });\r\n  return response.data;\r\n};\r\n\r\n// Получение всех пользователей (только для админов)\r\nexport const getUsers = async (): Promise<IApiResponse<IUser[]>> => {\r\n  const response = await api.get<IApiResponse<IUser[]>>('/users');\r\n  return response.data;\r\n};\r\n\r\n// Получение пользователя по ID (только для админов)\r\nexport const getUser = async (id: string): Promise<IApiResponse<IUser>> => {\r\n  const response = await api.get<IApiResponse<IUser>>(`/users/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Обновление пользователя (только для админов)\r\nexport const updateUser = async (\r\n  id: string,\r\n  userData: Partial<IUser>\r\n): Promise<IApiResponse<IUser>> => {\r\n  const response = await api.put<IApiResponse<IUser>>(`/users/${id}`, userData);\r\n  return response.data;\r\n};\r\n\r\n// Удаление пользователя (только для админов)\r\nexport const deleteUser = async (id: string): Promise<IApiResponse<null>> => {\r\n  const response = await api.delete<IApiResponse<null>>(`/users/${id}`);\r\n  return response.data;\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAoD;EACjF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAgC,oBAAoB,CAAC;EACnF,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAChCC,QAAgB,EAChBC,KAA+C,KACd;EACjC,MAAML,QAAQ,GAAG,MAAMF,GAAG,CAACQ,GAAG,CAAsB,qBAAqB,EAAE;IACzEF,QAAQ;IACRC;EACF,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMK,QAAQ,GAAG,MAAAA,CAAA,KAA4C;EAClE,MAAMP,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAwB,QAAQ,CAAC;EAC/D,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMM,OAAO,GAAG,MAAOC,EAAU,IAAmC;EACzE,MAAMT,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAsB,UAAUQ,EAAE,EAAE,CAAC;EACnE,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CACxBD,EAAU,EACVE,QAAwB,KACS;EACjC,MAAMX,QAAQ,GAAG,MAAMF,GAAG,CAACQ,GAAG,CAAsB,UAAUG,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAC7E,OAAOX,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,UAAU,GAAG,MAAOH,EAAU,IAAkC;EAC3E,MAAMT,QAAQ,GAAG,MAAMF,GAAG,CAACe,MAAM,CAAqB,UAAUJ,EAAE,EAAE,CAAC;EACrE,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}