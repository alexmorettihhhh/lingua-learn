{"ast":null,"code":"import api from'./api';import axios from'axios';import{getAuthHeader}from'../utils/auth';import{API_URL}from'../config';// Получение всех уроков с пагинацией\nexport const getLessons=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;const response=await api.get(`/lessons?page=${page}&limit=${limit}`);return response.data;};// Получение урока по ID\nexport const getLesson=async id=>{const response=await api.get(`/lessons/${id}`);return response.data;};// Получение уроков по языку\nexport const getLessonsByLanguage=async function(language){let page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;const response=await api.get(`/lessons/language/${language}?page=${page}&limit=${limit}`);return response.data;};// Получение уроков по уровню\nexport const getLessonsByLevel=async function(level){let page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;const response=await api.get(`/lessons/level/${level}?page=${page}&limit=${limit}`);return response.data;};// Создание нового урока (только для админов)\nexport const createLesson=async lessonData=>{const response=await api.post('/lessons',lessonData);return response.data;};// Обновление урока (только для админов)\nexport const updateLesson=async(id,lessonData)=>{const response=await api.put(`/lessons/${id}`,lessonData);return response.data;};// Удаление урока (только для админов)\nexport const deleteLesson=async id=>{const response=await api.delete(`/lessons/${id}`);return response.data;};/**\r\n * Start a lesson\r\n * @param id - The ID of the lesson to start\r\n */export const startLesson=async id=>{try{const response=await axios.post(`${API_URL}/lessons/${id}/start`,{},{headers:getAuthHeader()});return response.data;}catch(error){if(axios.isAxiosError(error)&&error.response){return{success:false,message:error.response.data.message||'Ошибка при начале урока'};}return{success:false,message:'Не удалось начать урок. Проверьте подключение к интернету.'};}};","map":{"version":3,"names":["api","axios","getAuthHeader","API_URL","getLessons","page","arguments","length","undefined","limit","response","get","data","getLesson","id","getLessonsByLanguage","language","getLessonsByLevel","level","createLesson","lessonData","post","updateLesson","put","deleteLesson","delete","startLesson","headers","error","isAxiosError","success","message"],"sources":["E:/grok/client/src/services/lesson.service.ts"],"sourcesContent":["import api from './api';\r\nimport { ILesson, ApiResponse } from '../types';\r\nimport axios from 'axios';\r\nimport { getAuthHeader } from '../utils/auth';\r\nimport { API_URL } from '../config';\r\n\r\n// Получение всех уроков с пагинацией\r\nexport const getLessons = async (\r\n  page = 1,\r\n  limit = 20\r\n): Promise<ApiResponse<ILesson[]>> => {\r\n  const response = await api.get<ApiResponse<ILesson[]>>(\r\n    `/lessons?page=${page}&limit=${limit}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Получение урока по ID\r\nexport const getLesson = async (id: string): Promise<ApiResponse<ILesson>> => {\r\n  const response = await api.get<ApiResponse<ILesson>>(`/lessons/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Получение уроков по языку\r\nexport const getLessonsByLanguage = async (\r\n  language: string,\r\n  page = 1,\r\n  limit = 20\r\n): Promise<ApiResponse<ILesson[]>> => {\r\n  const response = await api.get<ApiResponse<ILesson[]>>(\r\n    `/lessons/language/${language}?page=${page}&limit=${limit}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Получение уроков по уровню\r\nexport const getLessonsByLevel = async (\r\n  level: string,\r\n  page = 1,\r\n  limit = 20\r\n): Promise<ApiResponse<ILesson[]>> => {\r\n  const response = await api.get<ApiResponse<ILesson[]>>(\r\n    `/lessons/level/${level}?page=${page}&limit=${limit}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Создание нового урока (только для админов)\r\nexport const createLesson = async (\r\n  lessonData: Partial<ILesson>\r\n): Promise<ApiResponse<ILesson>> => {\r\n  const response = await api.post<ApiResponse<ILesson>>('/lessons', lessonData);\r\n  return response.data;\r\n};\r\n\r\n// Обновление урока (только для админов)\r\nexport const updateLesson = async (\r\n  id: string,\r\n  lessonData: Partial<ILesson>\r\n): Promise<ApiResponse<ILesson>> => {\r\n  const response = await api.put<ApiResponse<ILesson>>(\r\n    `/lessons/${id}`,\r\n    lessonData\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Удаление урока (только для админов)\r\nexport const deleteLesson = async (id: string): Promise<ApiResponse<null>> => {\r\n  const response = await api.delete<ApiResponse<null>>(`/lessons/${id}`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Start a lesson\r\n * @param id - The ID of the lesson to start\r\n */\r\nexport const startLesson = async (id: string): Promise<{\r\n  success: boolean;\r\n  message?: string;\r\n  data?: any;\r\n}> => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/lessons/${id}/start`,\r\n      {},\r\n      { headers: getAuthHeader() }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      return {\r\n        success: false,\r\n        message: error.response.data.message || 'Ошибка при начале урока',\r\n      };\r\n    }\r\n    return {\r\n      success: false,\r\n      message: 'Не удалось начать урок. Проверьте подключение к интернету.',\r\n    };\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}