{"ast":null,"code":"import api from'./api';// Получение прогресса пользователя\nexport const getUserProgress=async()=>{const response=await api.get('/users/me/progress');return response.data;};// Обновление языков пользователя\nexport const updateUserLanguage=async(language,level)=>{const response=await api.put('/users/me/languages',{language,level});return response.data;};// Получение всех пользователей (только для админов)\nexport const getUsers=async()=>{const response=await api.get('/users');return response.data;};// Получение пользователя по ID (только для админов)\nexport const getUser=async id=>{const response=await api.get(`/users/${id}`);return response.data;};// Обновление пользователя (только для админов)\nexport const updateUser=async(id,userData)=>{const response=await api.put(`/users/${id}`,userData);return response.data;};// Удаление пользователя (только для админов)\nexport const deleteUser=async id=>{const response=await api.delete(`/users/${id}`);return response.data;};","map":{"version":3,"names":["api","getUserProgress","response","get","data","updateUserLanguage","language","level","put","getUsers","getUser","id","updateUser","userData","deleteUser","delete"],"sources":["E:/grok/client/src/services/user.service.ts"],"sourcesContent":["import api from './api';\r\nimport { IUser, IUserProgress, IApiResponse } from '../types';\r\n\r\n// Получение прогресса пользователя\r\nexport const getUserProgress = async (): Promise<IApiResponse<IUserProgress[]>> => {\r\n  const response = await api.get<IApiResponse<IUserProgress[]>>('/users/me/progress');\r\n  return response.data;\r\n};\r\n\r\n// Обновление языков пользователя\r\nexport const updateUserLanguage = async (\r\n  language: string,\r\n  level: 'beginner' | 'intermediate' | 'advanced'\r\n): Promise<IApiResponse<IUser>> => {\r\n  const response = await api.put<IApiResponse<IUser>>('/users/me/languages', {\r\n    language,\r\n    level,\r\n  });\r\n  return response.data;\r\n};\r\n\r\n// Получение всех пользователей (только для админов)\r\nexport const getUsers = async (): Promise<IApiResponse<IUser[]>> => {\r\n  const response = await api.get<IApiResponse<IUser[]>>('/users');\r\n  return response.data;\r\n};\r\n\r\n// Получение пользователя по ID (только для админов)\r\nexport const getUser = async (id: string): Promise<IApiResponse<IUser>> => {\r\n  const response = await api.get<IApiResponse<IUser>>(`/users/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Обновление пользователя (только для админов)\r\nexport const updateUser = async (\r\n  id: string,\r\n  userData: Partial<IUser>\r\n): Promise<IApiResponse<IUser>> => {\r\n  const response = await api.put<IApiResponse<IUser>>(`/users/${id}`, userData);\r\n  return response.data;\r\n};\r\n\r\n// Удаление пользователя (только для админов)\r\nexport const deleteUser = async (id: string): Promise<IApiResponse<null>> => {\r\n  const response = await api.delete<IApiResponse<null>>(`/users/${id}`);\r\n  return response.data;\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAGvB;AACA,MAAO,MAAM,CAAAC,eAAe,CAAG,KAAAA,CAAA,GAAoD,CACjF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,CAAgC,oBAAoB,CAAC,CACnF,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,kBAAkB,CAAG,KAAAA,CAChCC,QAAgB,CAChBC,KAA+C,GACd,CACjC,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACQ,GAAG,CAAsB,qBAAqB,CAAE,CACzEF,QAAQ,CACRC,KACF,CAAC,CAAC,CACF,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,QAAQ,CAAG,KAAAA,CAAA,GAA4C,CAClE,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,CAAwB,QAAQ,CAAC,CAC/D,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,OAAO,CAAG,KAAO,CAAAC,EAAU,EAAmC,CACzE,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,CAAsB,UAAUQ,EAAE,EAAE,CAAC,CACnE,MAAO,CAAAT,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAQ,UAAU,CAAG,KAAAA,CACxBD,EAAU,CACVE,QAAwB,GACS,CACjC,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACQ,GAAG,CAAsB,UAAUG,EAAE,EAAE,CAAEE,QAAQ,CAAC,CAC7E,MAAO,CAAAX,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,UAAU,CAAG,KAAO,CAAAH,EAAU,EAAkC,CAC3E,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACe,MAAM,CAAqB,UAAUJ,EAAE,EAAE,CAAC,CACrE,MAAO,CAAAT,QAAQ,CAACE,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}