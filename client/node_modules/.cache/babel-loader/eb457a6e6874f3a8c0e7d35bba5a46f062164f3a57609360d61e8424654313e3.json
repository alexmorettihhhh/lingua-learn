{"ast":null,"code":"import api from './api';\nimport axios from 'axios';\nimport { getAuthHeader } from '../utils/auth';\nimport { API_URL } from '../config';\n\n// Получение всех уроков с пагинацией\nexport const getLessons = async (page = 1, limit = 20) => {\n  const response = await api.get(`/lessons?page=${page}&limit=${limit}`);\n  return response.data;\n};\n\n// Получение урока по ID\nexport const getLesson = async id => {\n  const response = await api.get(`/lessons/${id}`);\n  return response.data;\n};\n\n// Получение уроков по языку\nexport const getLessonsByLanguage = async (language, page = 1, limit = 20) => {\n  const response = await api.get(`/lessons/language/${language}?page=${page}&limit=${limit}`);\n  return response.data;\n};\n\n// Получение уроков по уровню\nexport const getLessonsByLevel = async (level, page = 1, limit = 20) => {\n  const response = await api.get(`/lessons/level/${level}?page=${page}&limit=${limit}`);\n  return response.data;\n};\n\n// Создание нового урока (только для админов)\nexport const createLesson = async lessonData => {\n  const response = await api.post('/lessons', lessonData);\n  return response.data;\n};\n\n// Обновление урока (только для админов)\nexport const updateLesson = async (id, lessonData) => {\n  const response = await api.put(`/lessons/${id}`, lessonData);\n  return response.data;\n};\n\n// Удаление урока (только для админов)\nexport const deleteLesson = async id => {\n  const response = await api.delete(`/lessons/${id}`);\n  return response.data;\n};\n\n/**\r\n * Start a lesson\r\n * @param id - The ID of the lesson to start\r\n */\nexport const startLesson = async id => {\n  try {\n    const response = await axios.post(`${API_URL}/lessons/${id}/start`, {}, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      return error.response.data;\n    }\n    return {\n      success: false,\n      message: error.message || 'Не удалось начать урок'\n    };\n  }\n};","map":{"version":3,"names":["api","axios","getAuthHeader","API_URL","getLessons","page","limit","response","get","data","getLesson","id","getLessonsByLanguage","language","getLessonsByLevel","level","createLesson","lessonData","post","updateLesson","put","deleteLesson","delete","startLesson","headers","error","success","message"],"sources":["E:/grok/client/src/services/lesson.service.ts"],"sourcesContent":["import api from './api';\r\nimport { ILesson, IApiResponse } from '../types';\r\nimport axios from 'axios';\r\nimport { getAuthHeader } from '../utils/auth';\r\nimport { API_URL } from '../config';\r\n\r\n// Получение всех уроков с пагинацией\r\nexport const getLessons = async (\r\n  page = 1,\r\n  limit = 20\r\n): Promise<IApiResponse<ILesson[]>> => {\r\n  const response = await api.get<IApiResponse<ILesson[]>>(\r\n    `/lessons?page=${page}&limit=${limit}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Получение урока по ID\r\nexport const getLesson = async (id: string): Promise<IApiResponse<ILesson>> => {\r\n  const response = await api.get<IApiResponse<ILesson>>(`/lessons/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Получение уроков по языку\r\nexport const getLessonsByLanguage = async (\r\n  language: string,\r\n  page = 1,\r\n  limit = 20\r\n): Promise<IApiResponse<ILesson[]>> => {\r\n  const response = await api.get<IApiResponse<ILesson[]>>(\r\n    `/lessons/language/${language}?page=${page}&limit=${limit}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Получение уроков по уровню\r\nexport const getLessonsByLevel = async (\r\n  level: string,\r\n  page = 1,\r\n  limit = 20\r\n): Promise<IApiResponse<ILesson[]>> => {\r\n  const response = await api.get<IApiResponse<ILesson[]>>(\r\n    `/lessons/level/${level}?page=${page}&limit=${limit}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Создание нового урока (только для админов)\r\nexport const createLesson = async (\r\n  lessonData: Partial<ILesson>\r\n): Promise<IApiResponse<ILesson>> => {\r\n  const response = await api.post<IApiResponse<ILesson>>('/lessons', lessonData);\r\n  return response.data;\r\n};\r\n\r\n// Обновление урока (только для админов)\r\nexport const updateLesson = async (\r\n  id: string,\r\n  lessonData: Partial<ILesson>\r\n): Promise<IApiResponse<ILesson>> => {\r\n  const response = await api.put<IApiResponse<ILesson>>(\r\n    `/lessons/${id}`,\r\n    lessonData\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Удаление урока (только для админов)\r\nexport const deleteLesson = async (id: string): Promise<IApiResponse<null>> => {\r\n  const response = await api.delete<IApiResponse<null>>(`/lessons/${id}`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Start a lesson\r\n * @param id - The ID of the lesson to start\r\n */\r\nexport const startLesson = async (id: string): Promise<{\r\n  success: boolean;\r\n  message?: string;\r\n  data?: any;\r\n}> => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/lessons/${id}/start`,\r\n      {},\r\n      { headers: getAuthHeader() }\r\n    );\r\n    return response.data;\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      return error.response.data;\r\n    }\r\n    return {\r\n      success: false,\r\n      message: error.message || 'Не удалось начать урок'\r\n    };\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,OAAO,QAAQ,WAAW;;AAEnC;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACxBC,IAAI,GAAG,CAAC,EACRC,KAAK,GAAG,EAAE,KAC2B;EACrC,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAC5B,iBAAiBH,IAAI,UAAUC,KAAK,EACtC,CAAC;EACD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,EAAU,IAAqC;EAC7E,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAwB,YAAYG,EAAE,EAAE,CAAC;EACvE,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMG,oBAAoB,GAAG,MAAAA,CAClCC,QAAgB,EAChBR,IAAI,GAAG,CAAC,EACRC,KAAK,GAAG,EAAE,KAC2B;EACrC,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAC5B,qBAAqBK,QAAQ,SAASR,IAAI,UAAUC,KAAK,EAC3D,CAAC;EACD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMK,iBAAiB,GAAG,MAAAA,CAC/BC,KAAa,EACbV,IAAI,GAAG,CAAC,EACRC,KAAK,GAAG,EAAE,KAC2B;EACrC,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAC5B,kBAAkBO,KAAK,SAASV,IAAI,UAAUC,KAAK,EACrD,CAAC;EACD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMO,YAAY,GAAG,MAC1BC,UAA4B,IACO;EACnC,MAAMV,QAAQ,GAAG,MAAMP,GAAG,CAACkB,IAAI,CAAwB,UAAU,EAAED,UAAU,CAAC;EAC9E,OAAOV,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,YAAY,GAAG,MAAAA,CAC1BR,EAAU,EACVM,UAA4B,KACO;EACnC,MAAMV,QAAQ,GAAG,MAAMP,GAAG,CAACoB,GAAG,CAC5B,YAAYT,EAAE,EAAE,EAChBM,UACF,CAAC;EACD,OAAOV,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMY,YAAY,GAAG,MAAOV,EAAU,IAAkC;EAC7E,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACsB,MAAM,CAAqB,YAAYX,EAAE,EAAE,CAAC;EACvE,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMc,WAAW,GAAG,MAAOZ,EAAU,IAItC;EACJ,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACiB,IAAI,CAC/B,GAAGf,OAAO,YAAYQ,EAAE,QAAQ,EAChC,CAAC,CAAC,EACF;MAAEa,OAAO,EAAEtB,aAAa,CAAC;IAAE,CAC7B,CAAC;IACD,OAAOK,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOgB,KAAU,EAAE;IACnB,IAAIA,KAAK,CAAClB,QAAQ,EAAE;MAClB,OAAOkB,KAAK,CAAClB,QAAQ,CAACE,IAAI;IAC5B;IACA,OAAO;MACLiB,OAAO,EAAE,KAAK;MACdC,OAAO,EAAEF,KAAK,CAACE,OAAO,IAAI;IAC5B,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}