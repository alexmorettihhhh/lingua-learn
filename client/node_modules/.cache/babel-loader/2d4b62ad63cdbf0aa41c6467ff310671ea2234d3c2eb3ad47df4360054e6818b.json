{"ast":null,"code":"var _jsxFileName = \"E:\\\\grok\\\\client\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport * as authService from '../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  isAuthenticated: false,\n  user: null,\n  loading: true,\n  error: null,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n  clearError: () => {}\n});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const loadUser = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const response = await authService.getCurrentUser();\n      if (response.success) {\n        setIsAuthenticated(true);\n        setUser(response.user);\n      } else {\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await authService.login({\n        email,\n        password\n      });\n      if (response.success) {\n        localStorage.setItem('token', response.token);\n        setIsAuthenticated(true);\n        setUser(response.user);\n      } else {\n        setError(response.message || 'Ошибка входа');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Ошибка сервера. Пожалуйста, попробуйте позже.');\n      setIsAuthenticated(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (name, email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await authService.register({\n        name,\n        email,\n        password\n      });\n      if (response.success) {\n        localStorage.setItem('token', response.token);\n        setIsAuthenticated(true);\n        setUser(response.user);\n      } else {\n        setError(response.message || 'Ошибка регистрации');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Ошибка сервера. Пожалуйста, попробуйте позже.');\n      setIsAuthenticated(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    setIsAuthenticated(false);\n    setUser(null);\n    setError(null);\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"vaOJqRNqhe8+3y/pDoWbnx+olHE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","isAuthenticated","user","loading","error","login","register","logout","clearError","useAuth","_s","AuthProvider","children","_s2","setIsAuthenticated","setUser","setLoading","setError","loadUser","token","localStorage","getItem","response","getCurrentUser","success","removeItem","email","password","setItem","message","_error$response","_error$response$data","data","name","_error$response2","_error$response2$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/grok/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { IUser } from '../types';\r\nimport * as authService from '../services/auth.service';\r\n\r\ninterface AuthContextProps {\r\n  isAuthenticated: boolean;\r\n  user: IUser | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (name: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({\r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: true,\r\n  error: null,\r\n  login: async () => {},\r\n  register: async () => {},\r\n  logout: () => {},\r\n  clearError: () => {},\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState<IUser | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const loadUser = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await authService.getCurrentUser();\r\n      \r\n      if (response.success) {\r\n        setIsAuthenticated(true);\r\n        setUser(response.user);\r\n      } else {\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.login({ email, password });\r\n      \r\n      if (response.success) {\r\n        localStorage.setItem('token', response.token);\r\n        setIsAuthenticated(true);\r\n        setUser(response.user);\r\n      } else {\r\n        setError(response.message || 'Ошибка входа');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      }\r\n    } catch (error: any) {\r\n      setError(\r\n        error.response?.data?.message || \r\n        'Ошибка сервера. Пожалуйста, попробуйте позже.'\r\n      );\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (name: string, email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.register({ name, email, password });\r\n      \r\n      if (response.success) {\r\n        localStorage.setItem('token', response.token);\r\n        setIsAuthenticated(true);\r\n        setUser(response.user);\r\n      } else {\r\n        setError(response.message || 'Ошибка регистрации');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      }\r\n    } catch (error: any) {\r\n      setError(\r\n        error.response?.data?.message || \r\n        'Ошибка сервера. Пожалуйста, попробуйте позже.'\r\n      );\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n    setError(null);\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        clearError,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}