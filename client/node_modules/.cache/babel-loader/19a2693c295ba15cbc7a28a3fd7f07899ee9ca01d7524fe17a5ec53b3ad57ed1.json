{"ast":null,"code":"var _jsxFileName = \"E:\\\\grok\\\\client\\\\src\\\\components\\\\routing\\\\AdminRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  element\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  return isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: element\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminRoute, \"7q0flPEpi0wJibJzdagPdtYRDq8=\", false, function () {\n  return [useAuth];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminRoute","element","_s","isAuthenticated","user","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","to","_c","$RefreshReg$"],"sources":["E:/grok/client/src/components/routing/AdminRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\ninterface AdminRouteProps {\r\n  element: React.ReactNode;\r\n}\r\n\r\nconst AdminRoute: React.FC<AdminRouteProps> = ({ element }) => {\r\n  const { isAuthenticated, user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return isAuthenticated && user?.role === 'admin' ? (\r\n    <>{element}</>\r\n  ) : (\r\n    <Navigate to=\"/dashboard\" />\r\n  );\r\n};\r\n\r\nexport default AdminRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMpD,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM;IAAEC,eAAe;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;EAEpD,IAAIU,OAAO,EAAE;IACX,oBACER,OAAA;MAAKS,SAAS,EAAC,+CAA+C;MAAAC,QAAA,eAC5DV,OAAA;QAAKS,SAAS,EAAC;MAAmF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC;EAEV;EAEA,OAAOR,eAAe,IAAI,CAAAC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,IAAI,MAAK,OAAO,gBAC9Cf,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EAAGN;EAAO,gBAAG,CAAC,gBAEdJ,OAAA,CAACH,QAAQ;IAACmB,EAAE,EAAC;EAAY;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC5B;AACH,CAAC;AAACT,EAAA,CAhBIF,UAAqC;EAAA,QACEL,OAAO;AAAA;AAAAmB,EAAA,GAD9Cd,UAAqC;AAkB3C,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}