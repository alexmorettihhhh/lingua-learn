{"ast":null,"code":"var _jsxFileName = \"E:\\\\grok\\\\client\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport * as authService from '../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    user: null,\n    loading: true,\n    error: null\n  });\n\n  // Проверка токена и загрузка пользователя при инициализации\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setAuthState(prev => ({\n            ...prev,\n            loading: false\n          }));\n          return;\n        }\n        const {\n          success,\n          user\n        } = await authService.getCurrentUser();\n        if (success && user) {\n          setAuthState({\n            isAuthenticated: true,\n            user,\n            loading: false,\n            error: null\n          });\n        } else {\n          localStorage.removeItem('token');\n          setAuthState({\n            isAuthenticated: false,\n            user: null,\n            loading: false,\n            error: null\n          });\n        }\n      } catch (error) {\n        localStorage.removeItem('token');\n        setAuthState({\n          isAuthenticated: false,\n          user: null,\n          loading: false,\n          error: 'Ошибка аутентификации'\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Функция входа\n  const login = async (email, password) => {\n    try {\n      setAuthState(prev => ({\n        ...prev,\n        loading: true,\n        error: null\n      }));\n      const {\n        success,\n        token,\n        user,\n        message\n      } = await authService.login({\n        email,\n        password\n      });\n      if (success && token && user) {\n        localStorage.setItem('token', token);\n        setAuthState({\n          isAuthenticated: true,\n          user,\n          loading: false,\n          error: null\n        });\n      } else {\n        setAuthState(prev => ({\n          ...prev,\n          loading: false,\n          error: message || 'Ошибка входа'\n        }));\n      }\n    } catch (error) {\n      setAuthState(prev => {\n        var _error$response, _error$response$data;\n        return {\n          ...prev,\n          loading: false,\n          error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Ошибка входа'\n        };\n      });\n    }\n  };\n\n  // Функция регистрации\n  const register = async (name, email, password) => {\n    try {\n      setAuthState(prev => ({\n        ...prev,\n        loading: true,\n        error: null\n      }));\n      const {\n        success,\n        token,\n        user,\n        message\n      } = await authService.register({\n        name,\n        email,\n        password\n      });\n      if (success && token && user) {\n        localStorage.setItem('token', token);\n        setAuthState({\n          isAuthenticated: true,\n          user,\n          loading: false,\n          error: null\n        });\n      } else {\n        setAuthState(prev => ({\n          ...prev,\n          loading: false,\n          error: message || 'Ошибка регистрации'\n        }));\n      }\n    } catch (error) {\n      setAuthState(prev => {\n        var _error$response2, _error$response2$data;\n        return {\n          ...prev,\n          loading: false,\n          error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Ошибка регистрации'\n        };\n      });\n    }\n  };\n\n  // Функция выхода\n  const logout = () => {\n    authService.logout();\n    setAuthState({\n      isAuthenticated: false,\n      user: null,\n      loading: false,\n      error: null\n    });\n  };\n\n  // Очистка ошибок\n  const clearError = () => {\n    setAuthState(prev => ({\n      ...prev,\n      error: null\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: authState.isAuthenticated,\n      user: authState.user,\n      loading: authState.loading,\n      error: authState.error,\n      login,\n      register,\n      logout,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mfPlyBm86nwQXac88TuHpjdeikA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authState","setAuthState","isAuthenticated","user","loading","error","loadUser","token","localStorage","getItem","prev","success","getCurrentUser","removeItem","login","email","password","message","setItem","_error$response","_error$response$data","response","data","register","name","_error$response2","_error$response2$data","logout","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/grok/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { IUser, IAuthState } from '../types';\r\nimport * as authService from '../services/auth.service';\r\n\r\ninterface AuthContextProps {\r\n  isAuthenticated: boolean;\r\n  user: IUser | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (name: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({} as AuthContextProps);\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [authState, setAuthState] = useState<IAuthState>({\r\n    isAuthenticated: false,\r\n    user: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  // Проверка токена и загрузка пользователя при инициализации\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (!token) {\r\n          setAuthState(prev => ({ ...prev, loading: false }));\r\n          return;\r\n        }\r\n\r\n        const { success, user } = await authService.getCurrentUser();\r\n        \r\n        if (success && user) {\r\n          setAuthState({\r\n            isAuthenticated: true,\r\n            user,\r\n            loading: false,\r\n            error: null,\r\n          });\r\n        } else {\r\n          localStorage.removeItem('token');\r\n          setAuthState({\r\n            isAuthenticated: false,\r\n            user: null,\r\n            loading: false,\r\n            error: null,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        localStorage.removeItem('token');\r\n        setAuthState({\r\n          isAuthenticated: false,\r\n          user: null,\r\n          loading: false,\r\n          error: 'Ошибка аутентификации',\r\n        });\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  // Функция входа\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      setAuthState(prev => ({ ...prev, loading: true, error: null }));\r\n      \r\n      const { success, token, user, message } = await authService.login({ email, password });\r\n      \r\n      if (success && token && user) {\r\n        localStorage.setItem('token', token);\r\n        setAuthState({\r\n          isAuthenticated: true,\r\n          user,\r\n          loading: false,\r\n          error: null,\r\n        });\r\n      } else {\r\n        setAuthState(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: message || 'Ошибка входа',\r\n        }));\r\n      }\r\n    } catch (error: any) {\r\n      setAuthState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: error.response?.data?.message || 'Ошибка входа',\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Функция регистрации\r\n  const register = async (name: string, email: string, password: string) => {\r\n    try {\r\n      setAuthState(prev => ({ ...prev, loading: true, error: null }));\r\n      \r\n      const { success, token, user, message } = await authService.register({\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      \r\n      if (success && token && user) {\r\n        localStorage.setItem('token', token);\r\n        setAuthState({\r\n          isAuthenticated: true,\r\n          user,\r\n          loading: false,\r\n          error: null,\r\n        });\r\n      } else {\r\n        setAuthState(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: message || 'Ошибка регистрации',\r\n        }));\r\n      }\r\n    } catch (error: any) {\r\n      setAuthState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: error.response?.data?.message || 'Ошибка регистрации',\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Функция выхода\r\n  const logout = () => {\r\n    authService.logout();\r\n    setAuthState({\r\n      isAuthenticated: false,\r\n      user: null,\r\n      loading: false,\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  // Очистка ошибок\r\n  const clearError = () => {\r\n    setAuthState(prev => ({ ...prev, error: null }));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated: authState.isAuthenticated,\r\n        user: authState.user,\r\n        loading: authState.loading,\r\n        error: authState.error,\r\n        login,\r\n        register,\r\n        logout,\r\n        clearError,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}